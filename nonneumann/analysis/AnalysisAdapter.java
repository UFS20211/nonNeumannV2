/* This file was generated by SableCC (http://www.sablecc.org/). */

package nonneumann.analysis;

import java.util.*;
import nonneumann.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseTComentarioBloco(TComentarioBloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioLinha(TComentarioLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspacoEmBranco(TEspacoEmBranco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumero(TNumero node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentificador(TIdentificador node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMultiplicacao(TMultiplicacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDivisaoInteira(TDivisaoInteira node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorQue(TMaiorQue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorQue(TMenorQue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOperadorBooleanoE(TOperadorBooleanoE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOperadorBooleanoOu(TOperadorBooleanoOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOperadorBooleanoNao(TOperadorBooleanoNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOperadorVinculacao(TOperadorVinculacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoFinal(TPontoFinal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParenteseEsquerdo(TParenteseEsquerdo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParenteseDireito(TParenteseDireito node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColcheteEsquerdo(TColcheteEsquerdo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColcheteDireito(TColcheteDireito node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentificadorFuncaoMain(TIdentificadorFuncaoMain node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPipe(TPipe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBooleanoVerdade(TBooleanoVerdade node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBooleanoFalso(TBooleanoFalso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumeroReal(TNumeroReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumeroBinario(TNumeroBinario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservadaSe(TReservadaSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservadaSenao(TReservadaSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservadaNumerica(TReservadaNumerica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservadaNumerico(TReservadaNumerico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservadaBooleano(TReservadaBooleano node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservadaBooleana(TReservadaBooleana node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservadaFuncao(TReservadaFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservadaConst(TReservadaConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservadaLambda(TReservadaLambda node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
