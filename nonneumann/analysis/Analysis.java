/* This file was generated by SableCC (http://www.sablecc.org/). */

package nonneumann.analysis;

import nonneumann.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTComentarioBloco(TComentarioBloco node);
    void caseTComentarioLinha(TComentarioLinha node);
    void caseTEspacoEmBranco(TEspacoEmBranco node);
    void caseTNumero(TNumero node);
    void caseTIdentificador(TIdentificador node);
    void caseTSoma(TSoma node);
    void caseTMenos(TMenos node);
    void caseTMultiplicacao(TMultiplicacao node);
    void caseTDiv(TDiv node);
    void caseTDivisaoInteira(TDivisaoInteira node);
    void caseTIgual(TIgual node);
    void caseTMaiorQue(TMaiorQue node);
    void caseTMenorQue(TMenorQue node);
    void caseTOperadorBooleanoE(TOperadorBooleanoE node);
    void caseTOperadorBooleanoOu(TOperadorBooleanoOu node);
    void caseTOperadorBooleanoNao(TOperadorBooleanoNao node);
    void caseTOperadorVinculacao(TOperadorVinculacao node);
    void caseTPontoFinal(TPontoFinal node);
    void caseTParenteseEsquerdo(TParenteseEsquerdo node);
    void caseTParenteseDireito(TParenteseDireito node);
    void caseTColcheteEsquerdo(TColcheteEsquerdo node);
    void caseTColcheteDireito(TColcheteDireito node);
    void caseTIdentificadorFuncaoMain(TIdentificadorFuncaoMain node);
    void caseTPipe(TPipe node);
    void caseTBooleanoVerdade(TBooleanoVerdade node);
    void caseTBooleanoFalso(TBooleanoFalso node);
    void caseTNumeroReal(TNumeroReal node);
    void caseTNumeroBinario(TNumeroBinario node);
    void caseTReservadaSe(TReservadaSe node);
    void caseTReservadaSenao(TReservadaSenao node);
    void caseTReservadaNumerica(TReservadaNumerica node);
    void caseTReservadaNumerico(TReservadaNumerico node);
    void caseTReservadaBooleano(TReservadaBooleano node);
    void caseTReservadaBooleana(TReservadaBooleana node);
    void caseTReservadaFuncao(TReservadaFuncao node);
    void caseTReservadaConst(TReservadaConst node);
    void caseTReservadaLambda(TReservadaLambda node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
